
#ACLOCAL_AMFLAGS = -I $(top_srcdir)/m4


all: libDNSSECcore$(SO_SUFF) libDANEcore$(SO_SUFF)


#AM_CPPFLAGS = \
#	-include $(top_srcdir)/plugin-source/config.h \
#	@CORE_CPPFLAGS@ \
#	-I$(top_srcdir)/plugin-source/common/

#AM_CFLAGS = \
#	@CORE_CFLAGS@

AM_OBJCFLAGS = \
	@CORE_OBJCFLAGS@


EXTRA_LTLIBRARIES = \
	libDNSSECcore.la \
	libDANEcore.la


CLEANFILES = \
	libDNSSECcore.la \
	libDNSSECcore$(SO_SUFF) \
	libDANEcore.la \
	libDANEcore$(SO_SUFF)


libDNSSECcore_la_SOURCES = \
	$(DNSSEC_CORE_SRCS)

libDNSSECcore_la_LDFLAGS = \
	-avoid-version \
	-rpath "/usr/lib" \
	-shared \
	$(USED_CORE_LDFLAGS)

if HAVE_LD_VERSION_SCRIPT
libDNSSECcore_la_LDFLAGS += \
	-Wl,-version-script -Wl,$(abs_top_builddir)/core_js-ctypes/libDNSSECcore.ver
else
libDNSSECcore_la_LDFLAGS += \
	-export-symbols-regex "^(dnssec)_"
endif

libDNSSECcore_la_LIBADD = \
	@CORE_LIBS@

if STATIC_CORE
#libDNSSECcore_la_LDFLAGS += \
#	-Wl,--whole-archive,$(abs_top_builddir)/static-libs/libs-built/openssl/lib/libcrypto.a,--no-whole-archive \
#	-Wl,--whole-archive,$(abs_top_builddir)/static-libs/libs-built/openssl/lib/libssl.a,--no-whole-archive \
#	-Wl,--whole-archive,$(abs_top_builddir)/static-libs/libs-built/ldns/lib/libldns.a,--no-whole-archive \
#	-Wl,--whole-archive,$(abs_top_builddir)/static-libs/libs-built/unbound/lib/libunbound.a,--no-whole-archive
# The order of libraries does matter.
libDNSSECcore_la_LDFLAGS += \
	$(DNSSEC_CORE_STATIC_DEPS)
endif


libDANEcore_la_SOURCES = \
	$(DANE_CORE_SRCS)

libDANEcore_la_LDFLAGS = \
	-avoid-version \
	-rpath "/usr/lib" \
	-shared \
	$(USED_CORE_LDFLAGS)

if HAVE_LD_VERSION_SCRIPT
libDANEcore_la_LDFLAGS += \
	-Wl,-version-script -Wl,$(abs_top_builddir)/core_js-ctypes/libDANEcore.ver
else
libDANEcore_la_LDFLAGS += \
	-export-symbols-regex "^(dane)_"
endif

libDANEcore_la_LIBADD = \
	@CORE_LIBS@

if STATIC_CORE
#libDANEcore_la_LDFLAGS += \
#	-Wl,--whole-archive,$(abs_top_builddir)/static-libs/libs-built/openssl/lib/libcrypto.a,--no-whole-archive \
#	-Wl,--whole-archive,$(abs_top_builddir)/static-libs/libs-built/openssl/lib/libssl.a,--no-whole-archive \
#	-Wl,--whole-archive,$(abs_top_builddir)/static-libs/libs-built/ldns/lib/libldns.a,--no-whole-archive \
#	-Wl,--whole-archive,$(abs_top_builddir)/static-libs/libs-built/unbound/lib/libunbound.a,--no-whole-archive
# The order of libraries does matter.
libDANEcore_la_LDFLAGS += \
	$(DANE_CORE_STATIC_DEPS)
endif


if MINGW_BUILD
CLEANFILES += \
	libDNSSECcore.def \
	libDANEcore.def

# Libtool refuses to link static archives into dynamic libraries, therefore
# the explicit linking.
# libldns contains inet_pton() and inet_ntop(), therefore it is laways linked.
DNSSEC_CORE_INSTALL_CMD = \
	$(CC) -shared -Wl,--output-def,libDNSSECcore.def,-Bstatic,-Bsymbolic,-lws2_32,-liphlpapi,-lgdi32 \
	-o .libs/libDNSSECcore$(SO_SUFF) common.o dnssec-plug.o log_dflt.o \
	$(DANE_CORE_STATIC_DEPS) -lws2_32 -liphlpapi -lgdi32
DANE_CORE_INSTALL_CMD = \
	$(CC) -shared -Wl,--output-def,libDANEcore.def,-Bstatic,-Bsymbolic,-lws2_32,-liphlpapi,-lgdi32,-lcrypt32 \
	-o .libs/libDANEcore$(SO_SUFF) common.o dane-plug.o log_dflt.o ca_store_win.o \
	$(DANE_CORE_STATIC_DEPS) -lws2_32 -liphlpapi -lgdi32 -lcrypt32
endif


libDNSSECcore$(SO_SUFF): libDNSSECcore.la
	$(DNSSEC_CORE_INSTALL_CMD)
	$(INSTALL) -m 644 .libs/libDNSSECcore$(SO_SUFF) $@ # FIXME: Ugly
	$(STRIP) $@

libDANEcore$(SO_SUFF): libDANEcore.la
	$(DANE_CORE_INSTALL_CMD)
	$(INSTALL) -m 644 .libs/libDANEcore$(SO_SUFF) $@ # FIXME: Ugly
	$(STRIP) $@

EXTRA_DIST = \
	libDNSSECcore.ver \
	libDANEcore.ver
